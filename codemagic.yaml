workflows:
  android-release:
    name: Android Release Build
    environment:
      groups:
        - keystore
      vars:
        GRADLE_OPTS: "-Dorg.gradle.daemon=false -Xmx4096m"
    scripts:
      # PHASE 1: ENVIRONMENT SETUP
      - name: Setup Environment
        script: |
          echo "=== Environment Configuration ==="
          flutter doctor -v
          java -version
          
          # Auto-detect Java Home
          JAVA_HOME=$(/usr/libexec/java_home -v 11 2>/dev/null || /usr/libexec/java_home -v 17 2>/dev/null)
          echo "JAVA_HOME=$JAVA_HOME" >> $CM_ENV

      # PHASE 2: GRADLE FIXES
      - name: Update Gradle to 8.0
        script: |
          echo "=== Updating Gradle Wrapper ==="
          cd android
          sed -i.bak 's/gradle-.*.zip/gradle-8.0-all.zip/' gradle/wrapper/gradle-wrapper.properties
          echo "New Gradle version:"
          cat gradle/wrapper/gradle-wrapper.properties
          cd ..

      # PHASE 3: BUILD PROCESS
      - name: Build with Full Diagnostics
        script: |
          echo "=== Running Build ==="
          mkdir -p build/logs
          
          # Gradle build with error capture
          cd android
          ./gradlew clean assembleRelease \
            --no-daemon \
            --stacktrace \
            --info \
            --scan \
            --console=plain 2>&1 | tee ../build/logs/gradle.log || {
            echo "Gradle build failed! Errors:"
            grep -A 15 -B 5 -i "error\|fail\|exception" ../build/logs/gradle.log || cat ../build/logs/gradle.log
            exit 1
          }
          cd ..
          
          # Flutter build with error capture
          flutter build apk --release --verbose 2>&1 | tee build/logs/flutter.log || {
            echo "Flutter build failed! Errors:"
            grep -A 15 -B 5 -i "error\|fail\|exception" build/logs/flutter.log || cat build/logs/flutter.log
            exit 1
          }

      # PHASE 4: ARTIFACT COLLECTION
      - name: Collect Artifacts
        script: |
          echo "=== Collecting Artifacts ==="
          mkdir -p build/outputs/apk
          
          if ls build/app/outputs/flutter-apk/*.apk 1> /dev/null 2>&1; then
            cp build/app/outputs/flutter-apk/*.apk build/outputs/apk/
            echo "APKs copied:"
            ls -lh build/outputs/apk/
          else
            echo "No APKs found in build/app/outputs/flutter-apk/"
            echo "Directory contents:"
            ls -la build/app/outputs/flutter-apk/ || true
            exit 1
          fi

    artifacts:
      - build/outputs/apk/*.apk
      - build/logs/**
      - android/gradle/wrapper/gradle-wrapper.properties
      - android/build.gradle

    publishing:
      email:
        recipients:
          - your.email@example.com
      scripts:
        - name: Build Report
          script: |
            echo "=== Build Summary ==="
            echo "Gradle version:"
            cat android/gradle/wrapper/gradle-wrapper.properties | grep "distributionUrl"
            echo "Java version:"
            java -version
            echo "APK info:"
            ls -lh build/outputs/apk/